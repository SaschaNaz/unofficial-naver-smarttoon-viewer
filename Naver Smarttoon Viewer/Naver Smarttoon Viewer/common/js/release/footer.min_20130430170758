var selectAll = false; var comicSearchTimer = null; function goToPage(page) { if (page < 1) { page = 1 } document.form.page.value = page; document.form.submit() } var cm = { checkedAll: function (chkbox, txt) { if (selectAll === true) { for (var i = 0; i < chkbox.length; i++) { chkbox[i].checked = false } txt.innerHTML = "전체선택"; selectAll = false } else { for (var i = 0; i < chkbox.length; i++) { chkbox[i].checked = true } txt.innerHTML = "선택해제"; selectAll = true } }, isChecked: function (chkbox) { var flag = false; for (var i = 0; i < chkbox.length; i++) { if (chkbox[i].checked) { flag = true; break } } return flag }, openLayer: function (obj) { obj.style.display = "block" }, closerLayer: function (obj) { obj.style.display = "none" } }; function search_toggle(sButtonId, sListId) { var oButton = document.getElementById(sButtonId); var oList = document.getElementById(sListId); var sButtonClassList = oButton.className; if (sButtonClassList != null) { if (sButtonClassList.indexOf(sButtonId + "_fd") != -1) { oButton.className = sButtonId + " " + sButtonId + "_op"; oList.style.display = "none" } else { oButton.className = sButtonId + " " + sButtonId + "_fd"; oList.style.display = "block" } } } function searchClear(str) { document.getElementById("msearch" + str).value = ""; checkSearch(str) } function checkSearch(str) { var word = document.getElementById("msearch" + str).value; if (word == "") { document.getElementById("delButton" + str).style.display = "hidden" } else { document.getElementById("delButton" + str).style.display = "" } } function comicSearch(str) { clearTimeout(comicSearchTimer); comicSearchTimer = setTimeout(function () { var keyword = document.getElementById("msearch" + str).value; if (keyword == "") { alert("검색어를 입력하세요."); return } document.getElementById("comicSearch" + str + "Form").submit() }, 300) } function total_service_toggle(sButtonId, sListId) { var oButton = document.getElementById(sButtonId); var oList = document.getElementById(sListId); var sButtonClassList = oButton.className; if (sButtonClassList != null) { if (sButtonClassList.indexOf(sButtonId + "_fd") != -1) { oButton.className = sButtonClassList.replace(sButtonId + "_fd", ""); oList.style.display = "none" } else { if (document.getElementById("profile") != null) { document.getElementById("profile").style.display = "none" } oButton.className = sButtonClassList + " " + sButtonId + "_fd"; oList.style.display = "block"; var hsbt = document.getElementById("u_hsbt").className; if (hsbt.indexOf("_fd") > 0) { search_toggle("u_hsbt", "u_hs") } } } if ("u_gnbuw2" == sListId && "block" == oList.style.display) { var iBodyHeight = document.body.clientHeight; var iBottomHeight = document.getElementById("u_gnbuw2").clientHeight; var iScrollHeight = iBodyHeight - iBottomHeight; setTimeout(function () { window.scrollTo(0, iScrollHeight) }, 100) } } function scrollToTheTop() { setTimeout(function () { window.scrollTo(0, 1) }, 100) } var cookieAct = { createCookie: function (name, value, days) { if (days) { var date = new Date(); date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000)); var expires = "; expires=" + date.toGMTString() } else { var expires = "" } document.cookie = name + "=" + value + expires + "; path=/" }, readCookie: function (name) { var nameEQ = name + "="; var ca = document.cookie.split(";"); for (var i = 0; i < ca.length; i++) { var c = ca[i]; while (c.charAt(0) == " ") { c = c.substring(1, c.length) } if (c.indexOf(nameEQ) == 0) { return c.substring(nameEQ.length, c.length) } } return null }, eraseCookie: function (name) { cookieAct.createCookie(name, "", -1) } }; var starAct = { toggle: function (sButtonId, sListId) { if (!act.isLogin("starAnchor")) { return } var oButton = document.getElementById(sButtonId); if (oButton == null) { return } var oList = document.getElementById(sListId); var sButtonClassList = oButton.className; if (sButtonClassList != null) { if (sButtonClassList.indexOf("up") != -1) { oButton.className = "dn"; oButton.innerHTML = "별점주기"; oList.style.display = "none"; document.getElementById("currentStarToggle").value = "dn"; cookieAct.eraseCookie("starToggle") } else { oButton.className = "up"; oButton.innerHTML = "별점닫기"; oList.style.display = "block"; document.getElementById("currentStarToggle").value = "up"; cookieAct.eraseCookie("starToggle") } } if ("u_gnbuw2" == sListId && "block" == oList.style.display) { var iBodyHeight = document.body.clientHeight; var iBottomHeight = document.getElementById("u_gnbuw2").clientHeight; var iScrollHeight = iBodyHeight - iBottomHeight; setTimeout(function () { window.scrollTo(0, iScrollHeight) }, 100) } }, star_clk: function (score) { var id; var currentScore = document.getElementById("currentStarcore").value; score = Number(score); if (currentScore == "up" || currentScore == "dn") { currentScore = 10 } currentScore = Number(currentScore); if (score == currentScore) { return } for (var i = 1; i <= 10; i++) { id = document.getElementById("u_grade_" + i); if (i <= score) { if (i & 1) { id.className = "u_grade_b u_grade_bon" } else { id.className = "u_grade_b2 u_grade_bon" } } else { if (i & 1) { id.className = "u_grade_b" } else { id.className = "u_grade_b2" } } } document.getElementById("currentStarcore").value = score; document.getElementById("viewCurrentStarcore").innerHTML = score }, add_clk: function () { var id; var score = ++document.getElementById("currentStarcore").value; if (score > 10) { document.getElementById("currentStarcore").value = 10; return } id = document.getElementById("u_grade_" + String(score)); if (score & 1) { id.className = "u_grade_b u_grade_bon" } else { id.className = "u_grade_b2 u_grade_bon" } document.getElementById("currentStarcore").value = score; document.getElementById("viewCurrentStarcore").innerHTML = score }, min_clk: function () { var id; var score = document.getElementById("currentStarcore").value - 1; if (score < 0) { document.getElementById("currentStarcore").value = 0; return } id = document.getElementById("u_grade_" + document.getElementById("currentStarcore").value); if (score & 1) { id.className = "u_grade_b2" } else { id.className = "u_grade_b" } document.getElementById("currentStarcore").value = score; document.getElementById("viewCurrentStarcore").innerHTML = score } }; var commentAct = { defaultHeight: 49, isOther: false, isKeyPress: function () { var evtObject = jindo.$("upload_txt"); if (evtObject.scrollHeight > evtObject.clientHeight) { evtObject.style.height = evtObject.scrollHeight + "px" } else { if (commentAct.isOther) { evtObject.style.height = commentAct.defaultHeight + "px"; evtObject.style.height = evtObject.scrollHeight + "px" } else { if (evtObject.scrollHeight <= commentAct.defaultHeight) { evtObject.style.height = commentAct.defaultHeight + "px" } else { if (evtObject.scrollHeight <= evtObject.clientHeight - 15) { evtObject.style.height = (evtObject.clientHeight - 15) + "px" } } } } }, init: function () { if (!act.isLogin("commentAnchor")) { return } if (!act.isReal()) { if (confirm("정보통신망법에 따라 게시판에 글 작성 시 실명확인이 필요합니다. 실명확인을 하시겠습니까?")) { location.href = "https://nid.naver.com/user/mobile_rncheck.nhn?todo=start&rurl=" + encodeURIComponent(location.href) + "&surl=" + encodeURIComponent(location.href) } return } var evtObject = jindo.$("upload_txt"); if (evtObject.attachEvent) { evtObject.attachEvent("onkeyup", commentAct.isKeyPress) } else { commentAct.isOther = true; var keyup = "oninput" in document.body ? "input" : "keyup"; evtObject.addEventListener(keyup, commentAct.isKeyPress, false) } }, listComment: function () { var titleId = jindo.$("currentTitleId").value; var no = jindo.$("currentNo").value; var seq = jindo.$("currentSeq").value; var week = jindo.$("currentWeek").value; var page = jindo.$("page").value; var category = jindo.$("listCategory").value; var url = "/comment/listComment.nhn?titleId=" + titleId + "&no=" + no + "&seq=" + seq + "&week=" + week + "&page=" + page + "&category=" + category; location.href = url } }; var bookmarkAct = { init: function (titleId, no, week, seq) { this._titleId = titleId; this._no = no; this._week = week; this._seq = seq }, _bookmark: function (e) { var sUrl = "/bookmark/create.nhn?m=create&titleId=" + this._titleId + "&no=" + this._no + "&week=" + this._week + "&seq=" + this._seq; var req = jindo.$Ajax(sUrl, { method: "post", onload: jindo.$Fn(this._result, this).bind("list"), onerror: jindo.$Fn(this.onError, this).bind("error") }); req.request() }, _result: function (type, result) { var jsonData = result.json(); var result = jsonData.result; alert(result) } }; var favoriteAct = { init: function (titleId) { this._titleId = titleId }, _favorite: function (e) { var sUrl = "/favorite/create.nhn?m=create&titleId=" + this._titleId; var req = jindo.$Ajax(sUrl, { method: "post", onload: jindo.$Fn(this._result, this).bind("list"), onerror: jindo.$Fn(this.onError, this).bind("error") }); req.request() }, _result: function (type, result) { var jsonData = result.json(); var result = jsonData.result; alert(result) } }; document.body.style.minHeight = document.body.clientHeight + "px";
(function (a) { var c, b, e = a.document; if (typeof BMR === "undefined") { BMR = {} } if (BMR.v) { return } c = { v: "t5", cN: "BMR=", bU: "", aL: function (f, d) { if (a.addEventListener) { a.addEventListener(f, d, false) } else { if (a.attachEvent) { a.attachEvent("on" + f, d) } } }, sT: function () { c.sC({ s: new Date().getTime(), r: e.URL.replace(/#.*/, ""), r2: e.referrer.replace(/#.*/, "") }) }, eU: function (d) { return encodeURIComponent(d) }, sC: function (f) { var g = "", d; for (d in f) { if (f.hasOwnProperty(d)) { g += "&" + c.eU(d) + "=" + c.eU(f[d]) } } g = g.replace(/^&/, ""); e.cookie = c.cN + g + "; path=/; domain=" + a.location.hostname.replace(/.*?([^.]+\.[^.]+)\.?$/, "$1").toLowerCase() }, gC: function () { var h, g = e.cookie + ";", f, d, k, j = {}; if (!((h = g.indexOf(c.cN)) >= 0)) { return null } h += c.cN.length; f = g.substring(h, g.indexOf(";", h)).split("&"); if (f.length === 0) { return null } for (h = 0, d = f.length; h < d; h++) { k = f[h].split("="); k.push(""); j[decodeURIComponent(k[0])] = decodeURIComponent(k[1]) } return j }, run: function (f) { if (!f) { return } var d = function () { if (c.sT) { c.sT.call() } c.sT = null }; c.bU = f; if ("onpagehide" in a) { c.aL("pagehide", d) } else { c.aL("unload", d); c.aL("beforeunload", d) } c.aL(("onpageshow" in a) ? "pageshow" : "load", function () { c.done.call() }) }, done: function () { var g, f, d = e.URL.replace(/#.*/, ""), i = r2 = e.referrer.replace(/#.*/, ""), h = c.gC(); c.sC({}); if (h != null) { i = h.r; if (i == r2 && (i != h.r2 || i != d)) { f = new Date().getTime() - parseInt(h.s, 10); d = c.bU + "?v=" + c.v + "&t=" + f + "&u=" + c.eU(d) + "&r=" + c.eU(i); (new Image()).src = d } } } }; for (b in c) { if (c.hasOwnProperty(b)) { BMR[b] = c[b] } } }(window));
var lcs_add = {}; var lcs_ver = "v0.4.13.m"; var lcs_cnt = 0; function lcs_do(etc) { if (!lcs_SerName) { var lcs_SerName = "lcs.naver.com" } var rs = ""; var index; var doc = document; var wlt = window.location; try { var lcs_Addr = (wlt.protocol ? wlt.protocol : "http:") + "//" + lcs_SerName + "/m?" } catch (e) { return } try { rs = lcs_Addr + "u=" + encodeURIComponent(wlt.href) + "&e=" + (doc.referrer ? encodeURIComponent(doc.referrer) : "") } catch (e) { } try { if (typeof lcs_add.i == "undefined") { lcs_add.i = "" } for (var index in lcs_add) { if (typeof lcs_add[index] != "function") { rs += "&" + index + "=" + encodeURIComponent(lcs_add[index]) } } for (var index in etc) { if ((index.length >= 3 && (typeof etc[index] != "function")) || index == "qy") { rs += "&" + index + "=" + encodeURIComponent(etc[index]) } } if (lcs_cnt > 0) { var timeStr = (new Date).getTime(); rs += "&ts=" + timeStr } rs += "&EOU"; if (doc.images) { var obj = (new Image()); obj.src = rs; obj.onload = function () { obj.onload = null; return } } else { doc.write('<img src="' + rs + '" width="1" height="1" border="0" />') } lcs_cnt++ } catch (e) { return } } function lcs_do_gdid(gdid, etc) { try { if (gdid) { lcs_add.i = gdid; if (etc) { lcs_do(etc) } else { lcs_do() } } } catch (e) { } };
